{'ChannelLink': '/channel/UC8butISFwT-Wl7EV0hUK0BQ', 'ChannelName': 'freeCodeCamp.org', 'Comments': "ËßÄÁúãÊ¨°Êï∏Ôºö862,227Ê¨° ‚Ä¢ 2019Âπ¥10Êúà9Êó• ‚Ä¢ This full course provides a complete introduction to Graph Theory algorithms in computer science. Knowledge of how to create and design excellent algorithms is an essential skill required in becoming a great programmer.\n\nYou will learn how many important algorithms work. The algorithms are accompanied by working source code in Java to solidify your understanding.\n\nüíª Code: https://github.com/williamfiset/algor...\nüîó Slides: https://github.com/williamfiset/Algor...\n\nüé• Course created by William Fiset. Check out his YouTube channel: https://www.youtube.com/channel/UCD8y...\n\n‚≠êÔ∏è Course Contents ‚≠êÔ∏è\n‚å®Ô∏è (0:00:00) Graph Theory Introduction\n‚å®Ô∏è (0:13:53) Problems in Graph Theory\n‚å®Ô∏è (0:23:15) Depth First Search Algorithm\n‚å®Ô∏è (0:33:18) Breadth First Search Algorithm\n‚å®Ô∏è (0:40:27) Breadth First Search grid shortest path\n‚å®Ô∏è (0:56:23) Topological Sort Algorithm\n‚å®Ô∏è (1:09:52) Shortest/Longest path on a Directed Acyclic Graph (DAG)\n‚å®Ô∏è (1:19:34) Dijkstra's Shortest Path Algorithm\n‚å®Ô∏è (1:43:17) Dijkstra's Shortest Path Algorithm | Source Code\n‚å®Ô∏è (1:50:47) Bellman Ford Algorithm\n‚å®Ô∏è (2:05:34) Floyd Warshall All Pairs Shortest Path Algorithm\n‚å®Ô∏è (2:20:54) Floyd Warshall All Pairs Shortest Path Algorithm | Source Code\n‚å®Ô∏è (2:29:19) Bridges and Articulation points Algorithm\n‚å®Ô∏è (2:49:01) Bridges and Articulation points source code\n‚å®Ô∏è (2:57:32) Tarjans Strongly Connected Components algorithm\n‚å®Ô∏è (3:13:56) Tarjans Strongly Connected Components algorithm source code\n‚å®Ô∏è (3:20:12) Travelling Salesman Problem | Dynamic Programming\n‚å®Ô∏è (3:39:59) Travelling Salesman Problem source code | Dynamic Programming\n‚å®Ô∏è (3:52:27) Existence of Eulerian Paths and Circuits\n‚å®Ô∏è (4:01:19) Eulerian Path Algorithm\n‚å®Ô∏è (4:15:47) Eulerian Path Algorithm | Source Code\n‚å®Ô∏è (4:23:00) Prim's Minimum Spanning Tree Algorithm\n‚å®Ô∏è (4:37:05) Eager Prim's Minimum Spanning Tree Algorithm\n‚å®Ô∏è (4:50:38) Eager Prim's Minimum Spanning Tree Algorithm | Source Code\n‚å®Ô∏è (4:58:30) Max Flow Ford Fulkerson | Network Flow\n‚å®Ô∏è (5:11:01) Max Flow Ford Fulkerson | Source Code\n‚å®Ô∏è (5:27:25) Unweighted Bipartite Matching | Network Flow\n‚å®Ô∏è (5:38:11) Mice and Owls problem | Network Flow\n‚å®Ô∏è (5:46:11) Elementary Math problem | Network Flow\n‚å®Ô∏è (5:56:19) Edmonds Karp Algorithm | Network Flow\n‚å®Ô∏è (6:05:18) Edmonds Karp Algorithm | Source Code\n‚å®Ô∏è (6:10:08) Capacity Scaling | Network Flow\n‚å®Ô∏è (6:19:34) Capacity Scaling | Network Flow | Source Code\n‚å®Ô∏è (6:25:04) Dinic's Algorithm | Network Flow\n‚å®Ô∏è (6:36:09) Dinic's Algorithm | Network Flow | Source Code\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://www.freecodecamp.org/news\n\nAnd subscribe for new videos on technology every day: https://youtube.com/subscription_cent...", 'Desc': "This full course provides a complete introduction to Graph Theory algorithms in computer science. Knowledge of how to create and design excellent algorithms is an essential skill required in becoming a great programmer.\n\nYou will learn how many important algorithms work. The algorithms are accompanied by working source code in Java to solidify your understanding.\n\nüíª Code: https://github.com/williamfiset/algor...\nüîó Slides: https://github.com/williamfiset/Algor...\n\nüé• Course created by William Fiset. Check out his YouTube channel: https://www.youtube.com/channel/UCD8y...\n\n‚≠êÔ∏è Course Contents ‚≠êÔ∏è\n‚å®Ô∏è (0:00:00) Graph Theory Introduction\n‚å®Ô∏è (0:13:53) Problems in Graph Theory\n‚å®Ô∏è (0:23:15) Depth First Search Algorithm\n‚å®Ô∏è (0:33:18) Breadth First Search Algorithm\n‚å®Ô∏è (0:40:27) Breadth First Search grid shortest path\n‚å®Ô∏è (0:56:23) Topological Sort Algorithm\n‚å®Ô∏è (1:09:52) Shortest/Longest path on a Directed Acyclic Graph (DAG)\n‚å®Ô∏è (1:19:34) Dijkstra's Shortest Path Algorithm\n‚å®Ô∏è (1:43:17) Dijkstra's Shortest Path Algorithm | Source Code\n‚å®Ô∏è (1:50:47) Bellman Ford Algorithm\n‚å®Ô∏è (2:05:34) Floyd Warshall All Pairs Shortest Path Algorithm\n‚å®Ô∏è (2:20:54) Floyd Warshall All Pairs Shortest Path Algorithm | Source Code\n‚å®Ô∏è (2:29:19) Bridges and Articulation points Algorithm\n‚å®Ô∏è (2:49:01) Bridges and Articulation points source code\n‚å®Ô∏è (2:57:32) Tarjans Strongly Connected Components algorithm\n‚å®Ô∏è (3:13:56) Tarjans Strongly Connected Components algorithm source code\n‚å®Ô∏è (3:20:12) Travelling Salesman Problem | Dynamic Programming\n‚å®Ô∏è (3:39:59) Travelling Salesman Problem source code | Dynamic Programming\n‚å®Ô∏è (3:52:27) Existence of Eulerian Paths and Circuits\n‚å®Ô∏è (4:01:19) Eulerian Path Algorithm\n‚å®Ô∏è (4:15:47) Eulerian Path Algorithm | Source Code\n‚å®Ô∏è (4:23:00) Prim's Minimum Spanning Tree Algorithm\n‚å®Ô∏è (4:37:05) Eager Prim's Minimum Spanning Tree Algorithm\n‚å®Ô∏è (4:50:38) Eager Prim's Minimum Spanning Tree Algorithm | Source Code\n‚å®Ô∏è (4:58:30) Max Flow Ford Fulkerson | Network Flow\n‚å®Ô∏è (5:11:01) Max Flow Ford Fulkerson | Source Code\n‚å®Ô∏è (5:27:25) Unweighted Bipartite Matching | Network Flow\n‚å®Ô∏è (5:38:11) Mice and Owls problem | Network Flow\n‚å®Ô∏è (5:46:11) Elementary Math problem | Network Flow\n‚å®Ô∏è (5:56:19) Edmonds Karp Algorithm | Network Flow\n‚å®Ô∏è (6:05:18) Edmonds Karp Algorithm | Source Code\n‚å®Ô∏è (6:10:08) Capacity Scaling | Network Flow\n‚å®Ô∏è (6:19:34) Capacity Scaling | Network Flow | Source Code\n‚å®Ô∏è (6:25:04) Dinic's Algorithm | Network Flow\n‚å®Ô∏è (6:36:09) Dinic's Algorithm | Network Flow | Source Code\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://www.freecodecamp.org/news\n\nAnd subscribe for new videos on technology every day: https://youtube.com/subscription_cent...", 'DisLikes': '159', 'Duration': '6:44:39', 'Likes': '2.7Ëê¨', 'Publish_Date': '2019Âπ¥10Êúà9Êó•', 'Subscribers': '356Ëê¨ ‰ΩçË®ÇÈñ±ËÄÖ', 'Title': 'Algorithms Course - Graph Theory Tutorial from a Google Engineer', 'Views': 'ËßÄÁúãÊ¨°Êï∏Ôºö862,227Ê¨°'}